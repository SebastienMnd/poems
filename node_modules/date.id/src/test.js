const DateID = require('./')

const chars = (c,l) => new Array(l).fill('').join(c)

const scriptStart = new Date()

Math.sum = function ()
{
	const args = [].slice.call(arguments)
	var sum = 0
	args.map(i=>sum+=i)
	return sum
}

Math.avg = function ()
{
	const args = [].slice.call(arguments)
	var len = args.length
	return Math.sum(...args) / len
}

Math.avga = a =>
{
	var s = 0
	var l = a.length
	a.map(i=>s+=i)
	return s/l
}

const pad = t => t < 10 ? '0' + t : '' + t
const padms = t =>
{
	if (t >= 100) return '' + t
	else if (t >= 10 && t < 100) return '0' + t
	else return '00' + t
}

const fa = a =>
{
	if (a.length === 0) return ''
	if (a.length === 1) return a[0]
	if (a.length === 2) return a.join(' and ')
	var last = a.pop()
	return a.join(', ') + ' and ' + last
}
const gtfd = d => [ [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/'), [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':'), padms(d.getMilliseconds()) ].join(' ')
const cms = ms =>
{
	var _ms = 1
		, _s = _ms * 1000
		, _m = _s * 60
		, _h = _m * 60
		, _d = _h * 24
	
	var leftOvers = ms
	
	var Days = Math.round(leftOvers / _d)
	leftOvers -= Days * _d
	
	var Hours = Math.round(leftOvers / _h)
	leftOvers -= Hours * _h
	
	var Minutes = Math.round(leftOvers / _m)
	leftOvers -= Minutes * _m
	
	var Seconds = Math.round(leftOvers / _s)
	leftOvers -= Seconds * _s
	
	var Milliseconds = Math.round(leftOvers)
	
	var str = [ ]
	
	if (Days > 0) str.push(Days + ' day' + ( Days > 1 ? 's' : '' ))
	if (Hours > 0) str.push(Hours + ' hour' + ( Hours > 1 ? 's' : ''))
	if (Minutes > 0) str.push(Minutes + ' minute' + ( Minutes > 1 ? 's' : ''))
	if (Seconds > 0) str.push(Seconds + ' second' + ( Seconds > 1 ? 's' : ''))
	if (Milliseconds > 0) str.push(Milliseconds + ' millisecond' + ( Milliseconds > 1 ? 's' : ''))
	if (str.length === 0) str.push('Too quick to count')
	
	return fa(str)
}
const gtdfd = (a, b) =>
{
	const am = a.getTime()
	const bm = b.getTime()
	const ms = bm - am
	return cms(ms)
}

const gl = () =>
{
	var d = {ids:[]}
	d.start = new Date()
	for (var i = 0; i < 1000000; i++)
	{
		const start = new Date()
		const id = DateID()
		const end = new Date()
		d.ids.push({start,id,end})
	}
	d.end = new Date()
	return d
}

console.log(' Testing Date.ID')
console.log(' Generating 1 000 000 IDs')
console.log(' Started: ' + gtfd(scriptStart))
console.log(' Working...')
const TheStuff = gl()
const scriptEnd = new Date()
console.log(' Finished: ' + gtfd(scriptEnd))
console.log(' Used: ' + gtdfd(scriptStart, scriptEnd))

var _ids_t = TheStuff.ids.map(id => id.end.getTime() - id.start.getTime())
var _ids_a = Math.avga(_ids_t)

var cols = Math.floor((process.stdout.columns - 2) / 18)
if (cols < 1) cols = 1
var rows = 8
var _ids_ids = TheStuff.ids.map(i=>i.id)

var _prtstr = _ids_ids.slice(0,cols*rows)
var prtstr = [ ]
for (var i = 0; i < rows; i++)
{
	prtstr.push([])
	for (var x = 0; x < cols; x++) prtstr[i][x] = _prtstr.shift()
}

var str = ' ' + prtstr.map(line => line.join('  ')).join('\n ')

console.log(' Average ID Generation Time: ' + cms(_ids_a))
console.log(' Showing ' + (cols*rows) + ' random IDs')
console.log(' ' + chars('-', process.stdout.columns - 2))
console.log(str)